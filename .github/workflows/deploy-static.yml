name: Deploy static assets

on:
  push:
    branches: [master]
  pull_request:

env:
  DJANGO_SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
  DJANGO_SETTINGS_MODULE: config.settings.production
  MUCKROCK_TOKEN: token
  STRIPE_SECRET_KEY: ${{secrets.STRIPE_SECRET_KEY}}
  STRIPE_PUB_KEY: ${{secrets.STRIPE_PUB_KEY}}
  STRIPE_WEBHOOK_SECRET: ${{secrets.STRIPE_WEBHOOK_SECRET}}
  AIRTABLE_ACCESS_TOKEN: ${{secrets.AIRTABLE_ACCESS_TOKEN}}
  AIRTABLE_ERH_BASE_ID: ${{secrets.AIRTABLE_ERH_BASE_ID}}
  AIRTABLE_ERH_TABLE_ID: ${{secrets.AIRTABLE_ERH_TABLE_ID}}
  MAILGUN_ACCESS_KEY: ""
  USE_DOCKER: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    # we just need a database connection to run ./manage.py
    # this isn't a real database
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: squarelet
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip" # caching pip dependencies

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "npm"

      - name: "Install node dependencies"
        run: npm ci --include dev

      - name: Install python dependencies
        run: |
          pip install -r requirements/production.txt

      - name: Build
        run: npm run build

      - name: Collect static
        run: python manage.py collectstatic --noinput
        env:
          # use the credentials for the service container
          DATABASE_URL: postgresql://test:postgres@localhost:5432/squarelet
